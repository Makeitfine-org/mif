<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Created under not commercial project "Make it fine"
  ~
  ~  Copyright 2017-2020
  ~  @author stingion
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.0.RELEASE</version>
    </parent>

    <groupId>com.stingion</groupId>
    <artifactId>makeitfine</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <developers>
        <developer>
            <name>Kores Mosto</name>
            <id>koresmost</id>
            <email>koresmosto@gmail.com</email>
            <roles>
                <role>Java Developer</role>
                <role>Architect</role>
            </roles>
        </developer>
    </developers>

    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!-- fail on validation warnings -->
        <failOnViolationByCheckstyle>true</failOnViolationByCheckstyle>
        <failOnErrorByCheckstyle>true</failOnErrorByCheckstyle>

        <failOnWarningByCompiler>true</failOnWarningByCompiler>
        <failOnWarningBySpotbugs>true</failOnWarningBySpotbugs>
        <failOnViolationByPMD>true</failOnViolationByPMD>

        <skipCheckers>false</skipCheckers>

        <!-- todo: Info -->
        <!-- Default values; it's also taken by 'dev' profile; maven (settings.xml);  -->
        <!-- Set env. variable: dev_env=true (~/.bashrc) and config maven ~/.m2/settings.xml -->
        <!-- Some settings is in settings.xml file for security reasons.-->

        <!-- ===== Default params ===== -->

        <!-- Debug configs -->
        <jvmargs></jvmargs>
        <jvmargsMainside></jvmargsMainside>
        <jvmargsIntroService></jvmargsIntroService>
        <jvmargsMqPublish></jvmargsMqPublish>
        <jvmargsMqConsume></jvmargsMqConsume>
        <jvmargsCacheService></jvmargsCacheService>

        <!-- MySQL DB -->
        <db.driver>com.mysql.cj.jdbc.Driver</db.driver>
        <hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</hibernate.dialect>
        <db.url>jdbc:mysql://localhost/makeitfinemysql?serverTimezone=UTC</db.url>
        <db.username>makeitfinemysql</db.username>
        <db.password>makeitfine121</db.password>
        <db.migration>db/migration/mysql</db.migration>

        <!-- Mongo DB -->
        <mongodb.host>localhost</mongodb.host>
        <mongodb.port>27017</mongodb.port>
        <mongodb.authentication-database>admin</mongodb.authentication-database>
        <mongodb.database>introdb</mongodb.database>
        <mongodb.password>intropass</mongodb.password>
        <mongodb.username>introuser</mongodb.username>

        <!-- RabbitMQ -->
        <rabbitmq.host>localhost</rabbitmq.host>
        <rabbitmq.port>5672</rabbitmq.port>
        <rabbitmq.username>guest</rabbitmq.username>
        <rabbitmq.password>guest</rabbitmq.password>
        <rabbitmq.exchange>secret-url-exchange</rabbitmq.exchange>
        <rabbitmq.queue>secret-url-queue</rabbitmq.queue>

        <!-- Redis -->
        <redis.host>localhost</redis.host>
        <redis.port>6379</redis.port>
        <redis.password>redispass</redis.password>

        <docker.image.prefix>koresmosto</docker.image.prefix>

        <encoding>UTF-8</encoding>
        <java.version>11</java.version> <!-- default port is 1521 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependencies versions -->
        <dockerfile-maven-plugin.version>1.4.10</dockerfile-maven-plugin.version>
        <slf4j.version>1.7.25</slf4j.version>
        <spring.version>4.3.9.RELEASE</spring.version>
        <pmd.version>6.23.0</pmd.version>
        <checkerframework.version>3.3.0</checkerframework.version>

        <!-- These properties will be set by the Maven Dependency plugin -->
        <!--suppress UnresolvedMavenProperty -->
        <!--        <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>-->
        <!--suppress UnresolvedMavenProperty -->
        <errorProneJavac>${com.google.errorprone:javac:jar}</errorProneJavac>

        <!--  -->
        <!--suppress UnresolvedMavenProperty -->
        <configs>${project.parent.basedir}/run/IDE</configs>
    </properties>

    <repositories>
        <repository>
            <id>myMavenRepo</id>
            <!-- todo: `mvn` prefix refers to maven ~/.m2/setting.xml -->
            <url>${mvn.myMavenRepo.read.url}</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>6.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>4.0.2</version>
            <scope>provided</scope>
        </dependency>
        <!-- Annotations from the Checker Framework: nullness, interning, locking, ... -->
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>jdk8</artifactId>
            <version>${checkerframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>framework-test</artifactId>
            <version>${checkerframework.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>javacutil</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>${checkerframework.version}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.checkerframework</groupId>-->
<!--            <artifactId>checker-qual</artifactId>-->
<!--            <version>${checkerframework.version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>javac</artifactId>
            <version>9+181-r4173-1</version>
        </dependency>
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <version>1.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>4.0.3</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>15.0</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.SR3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>mainside</module>
        <module>intro-service</module>
        <module>mq-publish</module>
        <module>mq-consume</module>
        <module>util</module>
        <module>cache-service</module>
    </modules>

    <profiles>
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>env.debug_env</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <jvmargsMainside>
                    -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -Dserver.port=8080
                </jvmargsMainside>
                <jvmargsIntroService>
                    -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006 -Dserver.port=8081
                </jvmargsIntroService>
                <jvmargsMqPublish>
                    -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007 -Dserver.port=8082
                </jvmargsMqPublish>
                <jvmargsMqConsume>
                    -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5008 -Dserver.port=8083
                </jvmargsMqConsume>
                <jvmargsCacheService>
                    -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5009 -Dserver.port=8084
                </jvmargsCacheService>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>env.docker_env</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <db.password>makeitfinepass</db.password>
                <db.url>jdbc:mysql://${mysql_server_in_docker}/makeitfinemysqldocker</db.url>
                <db.username>makeitfineuser</db.username>
                <mysql_server_in_docker>mysql</mysql_server_in_docker>
                <mongodb.host>mongo</mongodb.host>
                <rabbitmq.host>rabbitmq</rabbitmq.host>
                <redis.host>redis</redis.host>
            </properties>
        </profile>
        <profile>
            <id>kuber</id>
            <activation>
                <property>
                    <!-- todo: fix kuber and kuberSinglePod profile same prop: env.kuber_env -->
                    <name>env.kuber_env</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <db.password>makeitfinepass</db.password>
                <db.url>jdbc:mysql://${mysql_server_in_kuber}/makeitfinemysqlkuber</db.url>
                <db.username>makeitfineuser</db.username>
                <mysql_server_in_kuber>mysql</mysql_server_in_kuber>
            </properties>
        </profile>
        <profile>
            <id>kuberSinglePod</id>
            <activation>
                <property>
                    <name>env.kuber_env</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <db.password>makeitfinepass</db.password>
                <db.url>jdbc:mysql://${mysql_server_in_kuber}/makeitfinemysqlkuber</db.url>
                <db.username>makeitfineuser</db.username>
                <mysql_server_in_kuber>127.0.0.1</mysql_server_in_kuber>
            </properties>
        </profile>
        <profile>
            <id>Dev variables</id>
            <activation>
                <property>
                    <name>env.dev_env</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
            </properties>
        </profile>
        <profile>
            <id>travis</id>
            <activation>
                <property>
                    <name>env.travis</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <mvn.myMavenRepo.read.url>${env.myMavenRepo}</mvn.myMavenRepo.read.url>
            </properties>
        </profile>
        <profile>
            <id>skipCheckers</id>
            <activation>
                <property>
                    <name>env.skipCheckers</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <failOnViolationByCheckstyle>false</failOnViolationByCheckstyle>
                <failOnErrorByCheckstyle>false</failOnErrorByCheckstyle>
                <failOnWarningByCompiler>false</failOnWarningByCompiler>
                <failOnWarningBySpotbugs>false</failOnWarningBySpotbugs>
                <failOnViolationByPMD>false</failOnViolationByPMD>

                <skipCheckers>true</skipCheckers>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources/profiles</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yml</include>
                </includes>
                <targetPath>${project.build.outputDirectory}</targetPath>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/profiles/*.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.3</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <id>report</id>
                            <phase>test</phase>
                        </execution>
                        <execution>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>PACKAGE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <minimum>0.8</minimum>
                                                <value>COVEREDRATIO</value>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <id>jacoco-check</id>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.0.0</version>
                    <dependencies>
                        <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>4.0.2</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <skip>${skipCheckers}</skip>
                        <!--
                       Enables analysis which takes more memory but finds more bugs.
                       If you run out of memory, changes the value of the effort element
                       to 'Low'.
                        -->
                        <effort>Max</effort>
                        <!-- Build doesn't fail if problems are found -->
                        <failOnError>${failOnWarningBySpotbugs}</failOnError>
                        <!-- Reports all bugs (other values are medium and max) -->
                        <threshold>Low</threshold>
                        <includeTests>true</includeTests>
                        <xmlOutput>true</xmlOutput>
                        <excludeFilterFile>${configs}/spotbugs-exclude-filter.xml</excludeFilterFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.13.0</version>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <skip>${skipCheckers}</skip>
                        <sourceEncoding>utf-8</sourceEncoding>
                        <targetJdk>${java.version}</targetJdk>

                        <includeTests>true</includeTests>

                        <includeXmlInSite>true</includeXmlInSite>

                        <!-- failOnViolation is actually true by default, but can be disabled -->
                        <failOnViolation>${failOnViolationByPMD}</failOnViolation>

                        <!-- printFailingErrors is pretty useful -->
                        <minimumPriority>5</minimumPriority>
                        <failurePriority>5</failurePriority>

                        <analysisCache>true</analysisCache>
                        <!-- analysisCacheLocation: optional - points to the following location by default-->
                        <analysisCacheLocation>${project.build.directory}/pmd/pmd.cache</analysisCacheLocation>

                        <rulesets>
                            <ruleset>${configs}/pmd-rulesets.xml</ruleset>
                        </rulesets>

                        <!-- CPD -->
                        <ignoreAnnotations>true</ignoreAnnotations>
                        <ignoreIdentifiers>true</ignoreIdentifiers>
                        <ignoreLiterals>true</ignoreLiterals>
                        <minimumTokens>50</minimumTokens>
                        <detail>true</detail>
                        <verbose>true</verbose>
                        <benchmark>true</benchmark>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <excludedGroups>excluded</excludedGroups>
                    <excludes>
                        <exclude>**/EntityServiceITAncestor.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>excluded</excludedGroups>
                    <excludes>
                        <exclude>**/*IT</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <skip>${skipCheckers}</skip>
                    <configLocation>run/IDE/codestyle_checkers.xml</configLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <includes>**\/*.java</includes>
                    <resourceIncludes>
                        **/*.properties,
                        **/*.xml,
                        **/*.yaml,
                        **/*.yml,
                        **/*.sql,
                        **/*.sh,
                        **/*.bash,
                        **/*.js,
                        **/*.json
                    </resourceIncludes>
                    <consoleOutput>true</consoleOutput>
                    <encoding>UTF-8</encoding>
                    <linkXRef>false</linkXRef>
                    <suppressionsLocation>run/IDE/checkstyle-suppressions.xml</suppressionsLocation>
                    <violationSeverity>info</violationSeverity>
                    <failOnViolation>${failOnViolationByCheckstyle}</failOnViolation>
                    <failsOnError>${failOnErrorByCheckstyle}</failsOnError>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <id>validate</id>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <skip>${skipCheckers}</skip>
                    <!-- <fork>true</fork> &lt;!&ndash; todo: could be off if .mvn present&ndash;&gt;-->
                    <compilerVersion>${java.version}</compilerVersion>
                    <target>${java.version}</target>
                    <source>${java.version}</source>
                    <release>${java.version}</release>
                    <compilerArgs>
                        <arg>-Xmaxerrs</arg>
                        <arg>10000</arg>
                        <arg>-Xmaxwarns</arg>
                        <arg>10000</arg>
                        <arg>-Xlint:all,-processing</arg>
                        <arg>-J- -add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                        <arg>-Awarns</arg>
                        <arg>-AsuppressWarnings=uninitialized</arg>
                    </compilerArgs>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <verbose>false</verbose>
                    <failOnWarning>${failOnWarningByCompiler}</failOnWarning>
                    <annotationProcessorPaths>
                        <path>
                            <artifactId>lombok</artifactId>
                            <groupId>org.projectlombok</groupId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.checkerframework</groupId>
                            <artifactId>checker</artifactId>
                            <version>${checkerframework.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <annotationProcessors>
                        <annotationProcessor>
                            lombok.launch.AnnotationProcessorHider$AnnotationProcessor
                        </annotationProcessor>
                        <annotationProcessor>
                            org.checkerframework.checker.nullness.NullnessChecker
                        </annotationProcessor>
                        <annotationProcessor>
                            org.checkerframework.checker.optional.OptionalChecker
                        </annotationProcessor>
                    </annotationProcessors>
                </configuration>
                <executions>
                    <execution>
                        <!-- todo: compile source and test-source to analyze tests too (though of refactoring) -->
                        <id>compile-test-on-pre-site</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <failOnWarnings>true</failOnWarnings>
                    <additionalOptions>-Xdoclint:none</additionalOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <!--
                        Ensures that SpotBugs inspects source code when project is compiled.
                    -->
                    <execution>
                        <id>spotbugs-analyze</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pmd-analyze</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <excludeFromFailureFile>${configs}/excluded-pmd.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cpd-analyze</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>cpd-check</goal>
                        </goals>
                        <configuration>
                            <!-- Todo: ignore is only working for duplicates in one file
                                 (if duplicates belong ot diff. ones it will not work)
                                 Violations is not failing build but output in console.
                                 To suppress any kind of errors and to not show them in console use both:
                                 @SuppressWarnings("CPD-START") and @SuppressWarnings("CPD-END")
                                 Todo: it's better changing ignored in file to suppression in code
                                 -->
                            <excludeFromFailureFile>${configs}/excluded-cpd.properties</excludeFromFailureFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin> <!-- Todo: think of not using, cause jxr plugin expose sources in Javadoc -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <!-- todo: now there is generated code only for source (think of test too) -->
                <reportSets>
                    <reportSet>
                        <id>default</id>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                    <reportSet>
                        <id>aggregate</id>
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- todo: disable couse of exceptions while generation (think of include) -->
                            <!--              <report>dependencies</report>-->
                            <!--              <report>dependency-convergence</report>-->
                            <!--              <report>dependency-info</report>-->
                            <!--              <report>dependency-management</report>-->
                            <report>ci-management</report>
                            <report>issue-management</report>
                            <report>index</report>
                            <report>team</report>
                            <report>mailing-lists</report>
                            <report>ci-management</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>pmd-check-report</id>
                        <reports>
                            <report>pmd</report>
                        </reports>
                        <configuration>
                            <excludeFromFailureFile>${configs}/excluded-pmd.properties</excludeFromFailureFile>
                        </configuration>
                    </reportSet>
                    <reportSet>
                        <id>cpd-check-report</id>
                        <reports>
                            <report>cpd</report>
                        </reports>
                        <configuration>
                            <excludeFromFailureFile>${configs}/excluded-cpd.properties</excludeFromFailureFile>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
