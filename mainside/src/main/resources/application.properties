spring.mvc.view.prefix: /WEB-INF/pages/
spring.mvc.view.suffix: .jsp

spring.messages.basename=i18n/messages
#spring.mvc.locale=en #To make it work massages.properties file should be left, and messages_en.properties created
##spring.messages.cache-seconds=-1
spring.messages.encoding=UTF-8

#=============================
# Data Source Config
#=============================
# Make sure you created your database schema properly
spring.datasource.url = @db.url@
spring.datasource.username = @db.username@
spring.datasource.password = @db.password@
spring.datasource.driver-class-name = @db.driver@

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate
# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = @hibernate.dialect@

# FLYWAY
#flyway.enabled=true
flyway.enabled=false
flyway.url=@db.url@
flyway.user=@db.username@
flyway.password=@db.password@
flyway.locations=classpath:@db.migration@
